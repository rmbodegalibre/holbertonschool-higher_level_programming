This program contains a class MyList that inherits from list:
all numbers are integers.

Importing module my_list

	>>> MyList = __import__("1-my_list").MyList


Now, doing tests

>>> my_list = MyList()
>>> type(my_list)
<class '1-my_list.MyList'>

>>> print(my_list)
[]

>>> my_list = MyList([1, 2, 3])
>>> print(my_list)
[1, 2, 3]

my_list = MyList(None)
Traceback (most recent call last):
  ...
TypeError: 'NoneType' object is not iterable

>>> my_list = MyList([1, 2], [3, 4])
Traceback (most recent call last):
  ...
TypeError: list expected at most 1 argument, got 2

>>> my_list[0] = 5
>>> print(my_list)
[5, 2, 3]

>>> my_list.print_sorted()
[2, 3, 5]

>>> a = MyList()
>>> a
[]

>>> a.append(1)
>>> a.append(3)
>>> a
[1, 3]

>>> a.append(-6)
>>> a.append(0)
>>> a
[1, 3, -6, 0]

>>> a.print_sorted()
[-6, 0, 1, 3]

>>> b = MyList()
>>> b

>>> b.print_sorted()
[]



This function receive a matrix and divide all elements.

    matrix must be a list of lists of integers or floats,
    otherwise raise a TypeError exception with the message:
    "matrix must be a matrix (list of lists) of integers/floats"
    Each row of the matrix must be of the same size,
    otherwise raise a TypeError exception with the message:
    "Each row of the matrix must have the same size"
    div must be a number (integer or float),
    otherwise raise a TypeError exception with the message:
    "div must be a number"
    div canâ€™t be equal to 0,
    otherwise raise a ZeroDivisionError exception with the message:
    "division by zero"
    All elements of the matrix should be divided by div,
    rounded to 2 decimal places
    Returns a new matrix

Importing module matrix_divided

	>>> md = __import__("2-matrix_divided").matrix_divided

Now, doing tests

>>> md([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> md([[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]], 3)
[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

>>> md([[1, -2.2, 3, 4.4, 5], [-6.6, 7.00, 8, 9.999, 10]], 2)
[[0.5, -1.1, 1.5, 2.2, 2.5], [-3.3, 3.5, 4.0, 5.0, 5.0]]

>>> md([], 2)
Traceback (most recent call last):
    ...
IndexError: list index out of range

>>> md("No list")
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> md([1,2,3], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> md([[1,2,3],[4,5,6,7]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> md([[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]], "A")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> md([[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
